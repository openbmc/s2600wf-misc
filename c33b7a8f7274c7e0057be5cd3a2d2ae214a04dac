{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5e4d8bae_6997565b",
        "filename": "hsbp-manager/src/hsbp_manager.cpp",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2023-01-12T07:41:21Z",
      "side": 1,
      "message": "I think below code can also do same things\n```\nstruct HsbpConfig\n{\n    size_t rootBus \u003d -1;\n    std::vector\u003cstd::string\u003e supportedHsbps;\n    std::unordered_map\u003cstd::string, NvmeMapping\u003e hsbpNvmeMap;\n    std::vector\u003cstd::string\u003e clockBufferTypes;\n    std::vector\u003cstd::string\u003e ioExpanderTypes;\n```\n\nclearConfig is used only in two places program stop and before beginning. Former is actually not needed later can be taken care by above thing.",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 99,
        "endChar": 2
      },
      "revId": "c33b7a8f7274c7e0057be5cd3a2d2ae214a04dac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "292458d4_18cdbe15",
        "filename": "hsbp-manager/src/hsbp_manager.cpp",
        "patchSetId": 4
      },
      "lineNbr": 131,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2023-01-12T07:41:21Z",
      "side": 1,
      "message": "This class should delete copy constructor, move constructor etc..\nRule of five",
      "range": {
        "startLine": 126,
        "startChar": 1,
        "endLine": 131,
        "endChar": 13
      },
      "revId": "c33b7a8f7274c7e0057be5cd3a2d2ae214a04dac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3dc2c444_77592aa7",
        "filename": "hsbp-manager/src/hsbp_manager.cpp",
        "patchSetId": 4
      },
      "lineNbr": 139,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2023-01-12T07:41:21Z",
      "side": 1,
      "message": "file descriptor leak if ioctl fails.",
      "range": {
        "startLine": 124,
        "startChar": 2,
        "endLine": 139,
        "endChar": 13
      },
      "revId": "c33b7a8f7274c7e0057be5cd3a2d2ae214a04dac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ab1f0c3_26fa5649",
        "filename": "hsbp-manager/src/hsbp_manager.cpp",
        "patchSetId": 4
      },
      "lineNbr": 145,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2023-01-12T07:41:21Z",
      "side": 1,
      "message": "Keeping integer as index of hash table could be more efficient as \"Byte\" part is always constant. If indices are contigous then even vector can serve purpose. It can be vector if indices are contigous and array if length is known.",
      "range": {
        "startLine": 143,
        "startChar": 3,
        "endLine": 145,
        "endChar": 51
      },
      "revId": "c33b7a8f7274c7e0057be5cd3a2d2ae214a04dac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19feef5e_4b8535e3",
        "filename": "hsbp-manager/src/hsbp_manager.cpp",
        "patchSetId": 4
      },
      "lineNbr": 219,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2023-01-12T07:41:21Z",
      "side": 1,
      "message": "This creates stale objects. Enforcing contract on all users of this object to check initialized before usage. I think it\u0027s better to just throw and crash if constructor fails.\nhttps://isocpp.org/wiki/faq/exceptions#ctors-can-throw",
      "range": {
        "startLine": 210,
        "startChar": 3,
        "endLine": 219,
        "endChar": 5
      },
      "revId": "c33b7a8f7274c7e0057be5cd3a2d2ae214a04dac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96fcd04c_f5ff876d",
        "filename": "hsbp-manager/src/hsbp_manager.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1207,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2023-01-12T07:41:21Z",
      "side": 1,
      "message": "Is this equivalent to `currDriveStatus(nPresence ^ nIfdet)` ?",
      "range": {
        "startLine": 1198,
        "startChar": 8,
        "endLine": 1207,
        "endChar": 9
      },
      "revId": "c33b7a8f7274c7e0057be5cd3a2d2ae214a04dac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4c5c9b9_7093aca7",
        "filename": "hsbp-manager/src/hsbp_manager.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1277,
      "author": {
        "id": 1001151
      },
      "writtenOn": "2023-01-06T08:59:16Z",
      "side": 1,
      "message": "In case you are only planning to traverse in one direction do you prefer std::forward_list here ?",
      "range": {
        "startLine": 1277,
        "startChar": 4,
        "endLine": 1277,
        "endChar": 13
      },
      "revId": "c33b7a8f7274c7e0057be5cd3a2d2ae214a04dac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8641942_70d88853",
        "filename": "hsbp-manager/src/hsbp_manager.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2333,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2023-01-12T07:41:21Z",
      "side": 1,
      "message": "This is fairly large method to be put within a indentation. Moving callback inside another method will help in reducing indentation.",
      "range": {
        "startLine": 2331,
        "startChar": 0,
        "endLine": 2333,
        "endChar": 13
      },
      "revId": "c33b7a8f7274c7e0057be5cd3a2d2ae214a04dac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b83090e_35d8fb1a",
        "filename": "hsbp-manager/src/hsbp_manager.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2625,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2023-01-12T07:41:21Z",
      "side": 1,
      "message": "`__func__` can also be used here. Change in method name won\u0027t require changing function name everywhere in log.",
      "range": {
        "startLine": 2624,
        "startChar": 8,
        "endLine": 2625,
        "endChar": 30
      },
      "revId": "c33b7a8f7274c7e0057be5cd3a2d2ae214a04dac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}